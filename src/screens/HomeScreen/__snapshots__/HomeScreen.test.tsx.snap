// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen render correctly HomerScreen render 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "date": 123456,
          "id": "1f4ba8ae-f657-421e-8bb7-48e39f3be323",
          "title": "Test",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Array [
                Object {
                  "padding": 8,
                },
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginVertical": 6,
                    "paddingLeft": 8,
                  },
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "fontSize": 16,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Test
              </Text>
            </View>
            <View
              accessibilityLabel="more-button"
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "disabled": undefined,
                }
              }
              accessible={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 6,
                  "right": 6,
                  "top": 6,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 18,
                      "height": 36,
                      "width": 36,
                    },
                    undefined,
                    Object {
                      "marginRight": 0,
                      "marginVertical": 0,
                    },
                  ],
                ]
              }
            >
              <View>
                <Text />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                "height": 0.5,
              },
              undefined,
              undefined,
            ]
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
